# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-04 20:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_tutorials_auto_scheduler_tune_matmul_x86.py>` to "
"download the full example code"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:22
msgid "Auto-scheduling Matrix Multiplication for CPU"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:23
msgid ""
"**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,"
"             `Chengfan Jia <https://github.com/jcf94/>`_"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:25
msgid "This is a tutorial on how to use the auto-scheduler for CPUs."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:27
msgid ""
"Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` "
"which relies on manual templates to define the search space, the auto-"
"scheduler does not require any templates. Users only need to write the "
"computation declaration without any schedule commands or templates. The "
"auto-scheduler can automatically generate a large search space and find a"
" good schedule in the space."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:33
msgid "We use matrix multiplication as an example in this tutorial."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:35
msgid ""
"Note that this tutorial will not run on Windows or recent versions of "
"macOS. To get it to run, you will need to wrap the body of this tutorial "
"in a :code:`if __name__ == \"__main__\":` block."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:60
msgid "Define the computation"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:61
msgid ""
"To begin with, let us define the computation of a matmul with bias add. "
"The function should return the list of input/output tensors. From these "
"tensors, the auto-scheduler can get the whole computational graph."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:99
msgid "Create the search task"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:100
msgid ""
"We then create a search task with N=L=M=1024 and dtype=\"float32\" If "
"your machine supports avx instructions, you can"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:103
msgid "replace \"llvm\" below with \"llvm -mcpu=core-avx2\" to enable AVX2"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:104
msgid ""
"replace \"llvm\" below with \"llvm -mcpu=skylake-avx512\" to enable "
"AVX-512"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:125
msgid "Out:"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:142
msgid "Next, we set parameters for the auto-scheduler."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:144
msgid ""
":code:`num_measure_trials` is the number of measurement trials we can use"
" during the search. We only make 10 trials in this tutorial for a fast "
"demonstration. In practice, 1000 is a good value for the search to "
"converge. You can do more trials according to your time budget."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:147
msgid ""
"In addition, we use :code:`RecordToFile` to dump measurement records into"
" a file `matmul.json`. The measurement records can be used to query the "
"history best, resume the search, and do more analyses later."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:150
msgid "see :any:`auto_scheduler.TuningOptions` for more parameters"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:174
msgid "Run the search"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:175
msgid ""
"Now we get all inputs ready. Pretty simple, isn't it? We can kick off the"
" search and let the auto-scheduler do its magic. After some measurement "
"trials, we can load the best schedule from the log file and apply it."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:210
msgid ""
"We can lower the schedule to see the IR after auto-scheduling. The auto-"
"scheduler correctly performs optimizations including multi-level tiling, "
"layout transformation, parallelization, vectorization, unrolling, and "
"operator fusion."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:226
msgid "Check correctness and evaluate performance"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:227
msgid "We build the binary and check its correctness and performance."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:262
msgid "Using the record file"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:263
msgid ""
"During the search, all measurement records are dumped into the record "
"file \"matmul.json\". The measurement records can be used to re-apply "
"search results, resume the search, and perform other analyses."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:269
msgid ""
"Here is an example where we load the best schedule from a file, and print"
" the equivalent python schedule API. This can be used for debugging and "
"learning the behavior of the auto-scheduler."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:284
msgid ""
"A more complicated example is to resume the search. In this case, we need"
" to create the search policy and cost model by ourselves and resume the "
"status of search policy and cost model with the log file. In the example "
"below we resume the status and do more 5 trials."
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:323
msgid ""
":download:`Download Python source code: tune_matmul_x86.py "
"<tune_matmul_x86.py>`"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:329
msgid ""
":download:`Download Jupyter notebook: tune_matmul_x86.ipynb "
"<tune_matmul_x86.ipynb>`"
msgstr ""

#: ../../tutorials/auto_scheduler/tune_matmul_x86.rst:336
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

