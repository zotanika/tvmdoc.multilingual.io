# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-04 20:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../contribute/community.rst:21
msgid "TVM Community Guideline"
msgstr ""

#: ../../contribute/community.rst:23
msgid ""
"TVM adopts the Apache style model and governs by merit. We believe that "
"it is important to create an inclusive community where everyone can use, "
"contribute to, and influence the direction of the project. See "
"`CONTRIBUTORS.md "
"<https://github.com/apache/tvm/blob/main/CONTRIBUTORS.md>`_ for the "
"current list of contributors."
msgstr ""

#: ../../contribute/community.rst:28
msgid "General Development Process"
msgstr ""

#: ../../contribute/community.rst:29
msgid ""
"Everyone in the community is welcomed to send patches, documents, and "
"propose new directions to the project. The key guideline here is to "
"enable everyone in the community to get involved and participate the "
"decision and development.  When major changes are proposed, an RFC should"
" be sent to allow discussion by the community. We encourage public "
"discussion, archivable channels such as issues, discuss forum and "
"mailing-list, so that everyone in the community can participate and "
"review the process later."
msgstr ""

#: ../../contribute/community.rst:31
msgid ""
"Code reviews are one of the key ways to ensure the quality of the code. "
"High-quality code reviews prevent technical debt for long-term and are "
"crucial to the success of the project. A pull request needs to be "
"reviewed before it gets merged. A committer who has the expertise of the "
"corresponding area would moderate the pull request and the merge the code"
" when it is ready. The corresponding committer could request multiple "
"reviewers who are familiar with the area of the code. We encourage "
"contributors to request code reviews themselves and help review each "
"other's code -- remember everyone is volunteering their time to the "
"community, high-quality code review itself costs as much as the actual "
"code contribution, you could get your code quickly reviewed if you do "
"others the same favor."
msgstr ""

#: ../../contribute/community.rst:33
msgid ""
"The community should strive to reach a consensus on technical decisions "
"through discussion. We expect committers and PMCs to moderate technical "
"discussions in a diplomatic way, and provide suggestions with clear "
"technical reasoning when necessary."
msgstr ""

#: ../../contribute/community.rst:38
msgid "Committers"
msgstr ""

#: ../../contribute/community.rst:39
msgid ""
"Committers are individuals who are granted the write access to the "
"project. A committer is usually responsible for a certain area or several"
" areas of the code where they oversee the code review process. The area "
"of contribution can take all forms, including code contributions and code"
" reviews, documents, education, and outreach. Committers are essential "
"for a high quality and healthy project. The community actively look for "
"new committers from contributors. Here is a list of useful traits that "
"help the community to recognize potential committers:"
msgstr ""

#: ../../contribute/community.rst:41
msgid ""
"Sustained contribution to the project, demonstrated by discussion over "
"RFCs, code reviews and proposals of new features, and other development "
"activities. Being familiar with, and being able to take ownership on one "
"or several areas of the project."
msgstr ""

#: ../../contribute/community.rst:42
msgid ""
"Quality of contributions: High-quality, readable code contributions "
"indicated by pull requests that can be merged without a substantial code "
"review.  History of creating clean, maintainable code and including good "
"test cases. Informative code reviews to help other contributors that "
"adhere to a good standard."
msgstr ""

#: ../../contribute/community.rst:43
msgid ""
"Community involvement: active participation in the discussion forum, "
"promote the projects via tutorials, talks and outreach. We encourage "
"committers to collaborate broadly, e.g. do code reviews and discuss "
"designs with community members that they do not interact physically."
msgstr ""

#: ../../contribute/community.rst:45
msgid ""
"The Project Management Committee(PMC) consists group of active committers"
" that moderate the discussion, manage the project release, and proposes "
"new committer/PMC members. Potential candidates are usually proposed via "
"an internal discussion among PMCs, followed by a consensus approval, i.e."
" least 3 +1 votes, and no vetoes. Any veto must be accompanied by "
"reasoning. PMCs should serve the community by upholding the community "
"practices and guidelines TVM a better community for everyone. PMCs should"
" strive to only nominate new candidates outside of their own "
"organization."
msgstr ""

#: ../../contribute/community.rst:49
msgid "Reviewers"
msgstr ""

#: ../../contribute/community.rst:50
msgid ""
"Reviewers are individuals who actively contributed to the project and are"
" willing to participate in the code review of new contributions. We "
"identify reviewers from active contributors. The committers should "
"explicitly solicit reviews from reviewers.  High-quality code reviews "
"prevent technical debt for long-term and are crucial to the success of "
"the project. A pull request to the project has to be reviewed by at least"
" one reviewer in order to be merged."
msgstr ""

