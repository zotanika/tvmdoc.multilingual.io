# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-04 20:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../api/python/relay/dataflow_pattern.rst:19
msgid "tvm.relay.dataflow_pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern:1
msgid "The Relay Pattern Language and tooling."
msgstr ""

#: of tvm.relay.dataflow_pattern:1
msgid "**Classes:**"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ":obj:`Expr <tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.Expr>`\\"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "alias of :class:`tvm.ir.expr.RelayExpr`"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`DFPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern>`\\ "
"\\(\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "Base class of all Patterns."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`ExprPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.ExprPattern>`\\ "
"\\(expr\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.ExprPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern which matches a constant expression."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`VarPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.VarPattern>`\\ "
"\\(name\\_hint\\, type\\_annotation\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.VarPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A local variable in Relay."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`ConstantPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.ConstantPattern>`\\"
" \\(\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.ConstantPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern matching a Relay Constant."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`CallPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.CallPattern>`\\ "
"\\(op\\, args\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.CallPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern matching a function call node in Relay."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`FunctionPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.FunctionPattern>`\\"
" \\(params\\, body\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.FunctionPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern matching a function node in Relay."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`TuplePattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.TuplePattern>`\\ "
"\\(fields\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.TuplePattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A patern matching a Relay Tuple."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`TupleGetItemPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.TupleGetItemPattern>`\\"
" \\(tuple\\_value\\, index\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.TupleGetItemPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "Get index-th item from a TuplePattern."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`AltPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.AltPattern>`\\ "
"\\(left\\, right\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.AltPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "Create a Pattern that can match one of two conditions"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`WildcardPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.WildcardPattern>`\\"
" \\(\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.WildcardPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern which matches anything."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`TypePattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.TypePattern>`\\ "
"\\(pattern\\, ttype\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.TypePattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern that matches another pattern with a certain type annotation."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`DataTypePattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DataTypePattern>`\\"
" \\(pattern\\, dtype\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DataTypePattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern that matches another pattern with certain data type"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`ShapePattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.ShapePattern>`\\ "
"\\(pattern\\, shape\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.ShapePattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A pattern that matches another pattern with a certain tensor shape"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`AttrPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.AttrPattern>`\\ "
"\\(pattern\\, attrs\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "Get match an expression with a certain attributes."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`DominatorPattern "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DominatorPattern>`\\"
" \\(parent\\, path\\, child\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DominatorPattern:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "Match a domination graph."
msgstr ""

#: of tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid ""
":obj:`DFPatternCallback "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPatternCallback>`\\"
" \\(\\[require\\_type\\]\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback:1
#: tvm.relay.dataflow_pattern:1:<autosummary>:1
msgid "A Callback for Pattern Rewriting."
msgstr ""

#: of tvm.relay.dataflow_pattern:1
msgid "**Functions:**"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`make_node "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.make_node>`\\ "
"\\(type\\_key\\, \\*\\*kwargs\\)"
msgstr ""

#: of tvm.ir.attrs.make_node:1 tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid "Make a new IR node by its type key and fields"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`get <tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.get>`\\ "
"\\(op\\_name\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1 tvm.relay.op.op.get:1
msgid "Get the Op for a given name"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`register_df_node "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.register_df_node>`\\"
" \\(\\[type\\_key\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.register_df_node:1
msgid "Register a Relay node type."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_var "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_var>`\\ "
"\\(\\[name\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.is_var:1
msgid "Syntatic sugar for creating an optionally named VarPattern."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_constant "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_constant>`\\ "
"\\(\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.is_constant:1
msgid "Syntatic sugar for creating a ConstantPattern."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_expr "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_expr>`\\ "
"\\(expr\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.is_expr:1 tvm.relay.dataflow_pattern.is_tuple:1
#: tvm.relay.dataflow_pattern.is_tuple_get_item:1
msgid "Syntatic sugar for creating an ExprPattern."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_op "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_op>`\\ "
"\\(op\\_name\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.is_op:1
msgid "Syntatic sugar for creating an operator ExprPattern."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_tuple "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_tuple>`\\ "
"\\(fields\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`is_tuple_get_item "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.is_tuple_get_item>`\\"
" \\(tuple\\_value\\[\\, index\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`wildcard "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.wildcard>`\\ "
"\\(\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.wildcard:1
msgid "Syntatic sugar for creating a WildcardPattern."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`has_type "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.has_type>`\\ "
"\\(ttype\\[\\, pattern\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.has_type:1
msgid "Syntatic sugar for creating a TypePattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`has_dtype "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.has_dtype>`\\ "
"\\(dtype\\[\\, pattern\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.has_dtype:1
msgid "Syntatic sugar for creating a DataTypePattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`has_shape "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.has_shape>`\\ "
"\\(shape\\[\\, pattern\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.has_shape:1
msgid "Syntatic sugar for creating a ShapePattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`has_attr "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.has_attr>`\\ "
"\\(attrs\\[\\, pattern\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.has_attr:1
msgid "Syntatic sugar for creating an AttrPattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`dominates "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.dominates>`\\ "
"\\(parent\\, path\\, child\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.dominates:1
msgid "Syntatic sugar for creating an Dominator pattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`match "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.match>`\\ "
"\\(pattern\\, expr\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.match:1
msgid "Match a pattern to an expression"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`rewrite "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.rewrite>`\\ "
"\\(callbacks\\, expr\\[\\, mod\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.rewrite:1
msgid "Rewrite expression with the given callbacks."
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`partition "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.partition>`\\ "
"\\(pattern\\, expr\\[\\, attrs\\, check\\]\\)"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.partition:1
msgid "Parition the expression into a series of functions that match the pattern"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid ""
":obj:`checked_type "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.Expr.checked_type>`\\"
msgstr ""

#: of tvm.ir.expr.RelayExpr:1:<autosummary>:1
msgid "Get the checked type of tvm.relay.Expr."
msgstr ""

#: of tvm.ir.attrs.make_node tvm.relay.dataflow_pattern.AltPattern
#: tvm.relay.dataflow_pattern.AttrPattern
#: tvm.relay.dataflow_pattern.CallPattern
#: tvm.relay.dataflow_pattern.DFPattern.dominates
#: tvm.relay.dataflow_pattern.DFPattern.has_attr
#: tvm.relay.dataflow_pattern.DFPattern.has_dtype
#: tvm.relay.dataflow_pattern.DFPattern.has_shape
#: tvm.relay.dataflow_pattern.DFPattern.has_type
#: tvm.relay.dataflow_pattern.DFPattern.match
#: tvm.relay.dataflow_pattern.DFPattern.optional
#: tvm.relay.dataflow_pattern.DFPattern.partition
#: tvm.relay.dataflow_pattern.DFPatternCallback
#: tvm.relay.dataflow_pattern.DFPatternCallback.callback
#: tvm.relay.dataflow_pattern.DFPatternCallback.rewrite
#: tvm.relay.dataflow_pattern.DataTypePattern
#: tvm.relay.dataflow_pattern.DominatorPattern
#: tvm.relay.dataflow_pattern.ExprPattern
#: tvm.relay.dataflow_pattern.FunctionPattern
#: tvm.relay.dataflow_pattern.ShapePattern
#: tvm.relay.dataflow_pattern.TupleGetItemPattern
#: tvm.relay.dataflow_pattern.TuplePattern
#: tvm.relay.dataflow_pattern.TypePattern tvm.relay.dataflow_pattern.VarPattern
#: tvm.relay.dataflow_pattern.dominates tvm.relay.dataflow_pattern.has_attr
#: tvm.relay.dataflow_pattern.has_dtype tvm.relay.dataflow_pattern.has_shape
#: tvm.relay.dataflow_pattern.has_type tvm.relay.dataflow_pattern.is_constant
#: tvm.relay.dataflow_pattern.is_expr tvm.relay.dataflow_pattern.is_op
#: tvm.relay.dataflow_pattern.is_tuple
#: tvm.relay.dataflow_pattern.is_tuple_get_item
#: tvm.relay.dataflow_pattern.is_var tvm.relay.dataflow_pattern.match
#: tvm.relay.dataflow_pattern.partition
#: tvm.relay.dataflow_pattern.register_df_node
#: tvm.relay.dataflow_pattern.rewrite tvm.relay.op.op.get
msgid "Parameters"
msgstr ""

#: of tvm.ir.attrs.make_node:3 tvm.relay.dataflow_pattern.register_df_node:3
msgid "The type key of the node."
msgstr ""

#: of tvm.ir.attrs.make_node:5
msgid "The fields of the node."
msgstr ""

#: of tvm.ir.attrs.make_node tvm.relay.dataflow_pattern.DFPattern.dominates
#: tvm.relay.dataflow_pattern.DFPattern.has_attr
#: tvm.relay.dataflow_pattern.DFPattern.has_dtype
#: tvm.relay.dataflow_pattern.DFPattern.has_shape
#: tvm.relay.dataflow_pattern.DFPattern.has_type
#: tvm.relay.dataflow_pattern.DFPattern.match
#: tvm.relay.dataflow_pattern.DFPattern.optional
#: tvm.relay.dataflow_pattern.DFPattern.partition
#: tvm.relay.dataflow_pattern.DFPatternCallback.callback
#: tvm.relay.dataflow_pattern.DFPatternCallback.rewrite
#: tvm.relay.dataflow_pattern.dominates tvm.relay.dataflow_pattern.has_attr
#: tvm.relay.dataflow_pattern.has_dtype tvm.relay.dataflow_pattern.has_shape
#: tvm.relay.dataflow_pattern.has_type tvm.relay.dataflow_pattern.is_constant
#: tvm.relay.dataflow_pattern.is_expr tvm.relay.dataflow_pattern.is_op
#: tvm.relay.dataflow_pattern.is_tuple
#: tvm.relay.dataflow_pattern.is_tuple_get_item
#: tvm.relay.dataflow_pattern.is_var tvm.relay.dataflow_pattern.partition
#: tvm.relay.dataflow_pattern.rewrite tvm.relay.dataflow_pattern.wildcard
#: tvm.relay.op.op.get
msgid "Returns"
msgstr ""

#: of tvm.ir.attrs.make_node:8
msgid "**node** -- The corresponding IR Node"
msgstr ""

#: of tvm.ir.attrs.make_node tvm.relay.dataflow_pattern.DFPattern.dominates
#: tvm.relay.dataflow_pattern.DFPattern.has_attr
#: tvm.relay.dataflow_pattern.DFPattern.has_dtype
#: tvm.relay.dataflow_pattern.DFPattern.has_shape
#: tvm.relay.dataflow_pattern.DFPattern.has_type
#: tvm.relay.dataflow_pattern.DFPattern.match
#: tvm.relay.dataflow_pattern.DFPattern.optional
#: tvm.relay.dataflow_pattern.DFPattern.partition
#: tvm.relay.dataflow_pattern.DFPatternCallback.callback
#: tvm.relay.dataflow_pattern.DFPatternCallback.rewrite
#: tvm.relay.dataflow_pattern.dominates tvm.relay.dataflow_pattern.has_attr
#: tvm.relay.dataflow_pattern.has_dtype tvm.relay.dataflow_pattern.has_shape
#: tvm.relay.dataflow_pattern.has_type tvm.relay.dataflow_pattern.is_constant
#: tvm.relay.dataflow_pattern.is_expr tvm.relay.dataflow_pattern.is_op
#: tvm.relay.dataflow_pattern.is_tuple
#: tvm.relay.dataflow_pattern.is_tuple_get_item
#: tvm.relay.dataflow_pattern.is_var tvm.relay.dataflow_pattern.partition
#: tvm.relay.dataflow_pattern.rewrite tvm.relay.dataflow_pattern.wildcard
#: tvm.relay.op.op.get
msgid "Return type"
msgstr ""

#: of tvm.ir.attrs.make_node:13
msgid ""
"If the created node is instance of AttrsNode, then the creator function "
"will also run bound checks and default value setup as supported by Attrs."
msgstr ""

#: of tvm.ir.attrs.make_node:18
msgid "Example"
msgstr ""

#: of tvm.ir.attrs.make_node:19
msgid "The following code constructs a IntImm object"
msgstr ""

#: of tvm.relay.op.op.get:3
msgid "The operator name"
msgstr ""

#: of tvm.relay.op.op.get:6
msgid "**op** -- The op of the corresponding name"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern:1
#: tvm.relay.dataflow_pattern.DFPatternCallback:1
msgid "**Methods:**"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`has_attr "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.has_attr>`\\"
" \\(attrs\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1
#: tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid "Add an attribute constraint to this pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`has_type "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.has_type>`\\"
" \\(ttype\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.DFPattern.has_dtype:1
#: tvm.relay.dataflow_pattern.DFPattern.has_shape:1
#: tvm.relay.dataflow_pattern.DFPattern.has_type:1
msgid "Add a type constraint to this pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`has_dtype "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.has_dtype>`\\"
" \\(dtype\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`has_shape "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.has_shape>`\\"
" \\(shape\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`match "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.match>`\\"
" \\(expr\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.DFPattern.match:1
msgid "Match this pattern to an expression"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`partition "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.partition>`\\"
" \\(expr\\[\\, attrs\\, check\\]\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.DFPattern.partition:1
msgid "Partition the expression into functions defined by this pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`dominates "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.dominates>`\\"
" \\(parent\\[\\, path\\]\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.dominates:1
#: tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid "Create a dominator for this pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
msgid ""
":obj:`optional "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPattern.optional>`\\"
" \\(option\\_constructor\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:1:<autosummary>:1
#: tvm.relay.dataflow_pattern.DFPattern.optional:1
msgid "Create a optional user of this pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_attr:6
#: tvm.relay.dataflow_pattern.has_attr:8
msgid "**result** -- The resulting AttrPattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_type:3
#: tvm.relay.dataflow_pattern.has_type:3
msgid "The type to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_type:6
#: tvm.relay.dataflow_pattern.has_type:8
msgid "**result** -- The resulting TypePattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_dtype:3
#: tvm.relay.dataflow_pattern.has_dtype:3
msgid "The dtype to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_dtype:6
#: tvm.relay.dataflow_pattern.has_dtype:8
msgid "**result** -- The resulting DataTypePattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_shape:3
#: tvm.relay.dataflow_pattern.has_shape:3
msgid "The shape to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.has_shape:6
#: tvm.relay.dataflow_pattern.has_shape:8
msgid "**result** -- The resulting ShapePattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.match:3
#: tvm.relay.dataflow_pattern.DFPattern.partition:3
#: tvm.relay.dataflow_pattern.ExprPattern:3 tvm.relay.dataflow_pattern.match:5
msgid "The expression to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.match:6
msgid "**result** -- Whether or not the expression matches the pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.partition:5
msgid "A dictionary of Attribute name/values to add to the paritioned function"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.partition:7
#: tvm.relay.dataflow_pattern.partition:9
msgid ""
"A function to perform more complicated checks on the matched expression. "
"Returns true if partitioning should proceed, false otherwise."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.partition:11
#: tvm.relay.dataflow_pattern.partition:13
msgid ""
"**result** -- The Expression with matched subgraphs replaced by function "
"calls to that subgraph"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.dominates:3
msgid "The parent pattern this pattern dominates."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.dominates:5
#: tvm.relay.dataflow_pattern.dominates:5
msgid "The fuzzy path pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.dominates:8
#: tvm.relay.dataflow_pattern.dominates:10
msgid "**result** -- The resulting DominatorPattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.optional:3
msgid ""
"A function that takes a single Pattern parameter and returns a "
"constructed pattern matching the option"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPattern.optional:7
msgid "**result** -- The resulting Pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.is_constant:3
#: tvm.relay.dataflow_pattern.is_var:3
msgid "The name of the input pattern to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.is_constant:6
#: tvm.relay.dataflow_pattern.is_expr:6 tvm.relay.dataflow_pattern.is_tuple:6
#: tvm.relay.dataflow_pattern.is_tuple_get_item:8
#: tvm.relay.dataflow_pattern.is_var:6 tvm.relay.dataflow_pattern.wildcard:3
msgid "**result** -- The resulting pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.is_expr:3
msgid "The Relay expression to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.is_op:3
msgid "The name of the relay op"
msgstr ""

#: of tvm.relay.dataflow_pattern.is_op:6
msgid "**result** -- The resulting ExprPattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.TuplePattern:3
#: tvm.relay.dataflow_pattern.is_tuple:3
msgid "The fields in the tuple."
msgstr ""

#: of tvm.relay.dataflow_pattern.TupleGetItemPattern:3
#: tvm.relay.dataflow_pattern.is_tuple_get_item:3
msgid "The input tuple expression."
msgstr ""

#: of tvm.relay.dataflow_pattern.TupleGetItemPattern:5
#: tvm.relay.dataflow_pattern.is_tuple_get_item:5
msgid "The index to match; Default (None) to match a TupleGetItem with any index."
msgstr ""

#: of tvm.relay.dataflow_pattern.has_dtype:5
#: tvm.relay.dataflow_pattern.has_shape:5 tvm.relay.dataflow_pattern.has_type:5
msgid "The pattern that needs type annotation"
msgstr ""

#: of tvm.relay.dataflow_pattern.has_attr:3
msgid "The attributes to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.AttrPattern:4
#: tvm.relay.dataflow_pattern.has_attr:5 tvm.relay.dataflow_pattern.match:3
msgid "The input pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.dominates:3
msgid "The parent pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.dominates:7
msgid "The child pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.VarPattern:3
msgid ""
"Local variable can be used to declare input arguments to a function, or "
"intermediate variables."
msgstr ""

#: of tvm.relay.dataflow_pattern.VarPattern:6
msgid ""
"The name of the variable. Optional, if not provided, the pattern will "
"match any VarNode."
msgstr ""

#: of tvm.relay.dataflow_pattern.VarPattern:9
msgid "The type annotation on the variable."
msgstr ""

#: of tvm.relay.dataflow_pattern.CallPattern:3
msgid "The operation to be called."
msgstr ""

#: of tvm.relay.dataflow_pattern.CallPattern:5
msgid "The arguments to the call."
msgstr ""

#: of tvm.relay.dataflow_pattern.FunctionPattern:3
msgid "The parameters to the Function."
msgstr ""

#: of tvm.relay.dataflow_pattern.FunctionPattern:5
msgid "The body fo the Function"
msgstr ""

#: of tvm.relay.dataflow_pattern.AltPattern:3
#: tvm.relay.dataflow_pattern.AltPattern:5
msgid "One possible matching pattern."
msgstr ""

#: of tvm.relay.dataflow_pattern.DataTypePattern:3
#: tvm.relay.dataflow_pattern.ShapePattern:3
#: tvm.relay.dataflow_pattern.TypePattern:3
msgid "The input pattern that needs type annotation."
msgstr ""

#: of tvm.relay.dataflow_pattern.TypePattern:5
msgid "The type to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.DataTypePattern:5
msgid "The dtype to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.ShapePattern:5
msgid "The shape to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.AttrPattern:1
msgid ""
"Get match an expression with a certain attributes. Currently only "
"supports Op Attributes, not call Attributes."
msgstr ""

#: of tvm.relay.dataflow_pattern.AttrPattern:6
msgid "The attributes to match."
msgstr ""

#: of tvm.relay.dataflow_pattern.DominatorPattern:3
msgid ""
"The parent, i.e., the single node which produces something, later "
"aggregated by the child."
msgstr ""

#: of tvm.relay.dataflow_pattern.DominatorPattern:6
msgid ""
"The fuzzy path pattern between parent and child, typically matches "
"elementwise ops."
msgstr ""

#: of tvm.relay.dataflow_pattern.DominatorPattern:9
msgid ""
"The last node in the domination which is the end user for all nodes in "
"the path and the parent."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback:3
msgid ""
"When rewrite is called on this DFPatternCallback, the backend will find "
"matches for the pattern, call the callback function, and replace the "
"matched expression with whatever the callback returns."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback:7
msgid ""
"Users are expect to inherit from this class and provide a "
"\"self.pattern\" to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback:9
msgid "Whether InferType is required to be run before the callback."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:1:<autosummary>:1
msgid ""
":obj:`rewrite "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPatternCallback.rewrite>`\\"
" \\(expr\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:1
#: tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:1:<autosummary>:1
msgid "Rewrite expression with this callback"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:1:<autosummary>:1
msgid ""
":obj:`callback "
"<tvm.relay.dataflow_pattern.tvm.relay.dataflow_pattern.DFPatternCallback.callback>`\\"
" \\(pre\\, post\\, node\\_map\\)"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.callback:1
#: tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:1:<autosummary>:1
msgid "Callback function to use when we found a match to the pattern"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:3
#: tvm.relay.dataflow_pattern.rewrite:5
msgid "The expression to rewrite."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.rewrite:6
#: tvm.relay.dataflow_pattern.rewrite:10
msgid ""
"**result** -- The Expression with matched subgraphs rewritten by the "
"callbacks."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.callback:3
msgid "The matching expression from the original graph."
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.callback:5
msgid "The matching expression with rewritten inputs"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.callback:7
msgid "The map between patterns and matched expressions"
msgstr ""

#: of tvm.relay.dataflow_pattern.DFPatternCallback.callback:10
msgid ""
"**result** -- The Expression with matched subgraph rewritten by the "
"callback"
msgstr ""

#: of tvm.relay.dataflow_pattern.rewrite:3
msgid "The input callback or list of callbacks."
msgstr ""

#: of tvm.relay.dataflow_pattern.rewrite:7
msgid "The module that associates with the expression."
msgstr ""

#: of tvm.relay.dataflow_pattern.partition:3
msgid "The pattern to match"
msgstr ""

#: of tvm.relay.dataflow_pattern.partition:5
msgid "The expression to split into functions"
msgstr ""

#: of tvm.relay.dataflow_pattern.partition:7
msgid "A dict of attributes to apply to the partitioned function"
msgstr ""

