# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 - 2021, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-06 10:20+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../_staging/how_to/compile_models/from_onnx.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_how_to_compile_models_from_onnx.py>` "
"to download the full example code"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:22
msgid "Compile ONNX Models"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:23
msgid "**Author**: `Joshua Z. Zhang <https://zhreshold.github.io/>`_"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:25
msgid "This article is an introductory tutorial to deploy ONNX models with Relay."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:27
msgid "For us to begin with, ONNX package must be installed."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:29
msgid "A quick solution is to install protobuf compiler, and"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:35
msgid "or please refer to official site. https://github.com/onnx/onnx"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:59
msgid "Load pretrained ONNX model"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:60
msgid ""
"The example super resolution model used here is exactly the same model in"
" onnx tutorial "
"http://pytorch.org/tutorials/advanced/super_resolution_with_caffe2.html "
"we skip the pytorch model construction part, and download the saved onnx "
"model"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:90
msgid "Load a test image"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:91
msgid ""
"A single cat dominates the examples! This model takes a single input "
"image of size 224x224 and outputs a scaled image that is 3x greater than "
"the input along each axis, a 672x672 image. Re-scale the cat image to fit"
" this input shape then convert to `YCbCr`. The super resolution model "
"will then be applied to the luminance (`Y`) channel."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:120
msgid "Compile the model with relay"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:121
msgid ""
"Typically ONNX models mix model input values with parameter values, with "
"the input having the name `1`. This model dependent, and you should check"
" with the documentation for your model to determine the full input and "
"parameter name space."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:126
msgid ""
"Passing in the shape dictionary to the `relay.frontend.from_onnx` method "
"tells relay which ONNX parameters are inputs, and which are parameters, "
"and provides a static definition of the input size."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:151
msgid "Out:"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:166
msgid "Execute on TVM"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:185
msgid "Display results"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:186
msgid ""
"We put input and output image neck to neck. The luminance channel, `Y` is"
" the output from the model. The chroma channels `Cb` and `Cr` are resized"
" to match with a simple bicubic algorithm. The image is then recombined "
"and converted back to `RGB`."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:221
msgid "Notes"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:222
msgid ""
"By default, ONNX defines models in terms of dynamic shapes. The ONNX "
"importer retains that dynamism upon import, and the compiler attempts to "
"convert the model into a static shapes at compile time. If this fails, "
"there may still be dynamic operations in the model. Not all TVM kernels "
"currently support dynamic shapes, please file an issue on "
"discuss.tvm.apache.org if you hit an error with dynamic kernels."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:228
msgid ""
"This particular model was build using an older version of ONNX. During "
"the import phase ONNX importer will run the ONNX verifier, which may "
"throw a `Mismatched attribute type` warning. Because TVM supports a "
"number of different ONNX versions, the Relay model will still be valid."
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:246
msgid ":download:`Download Python source code: from_onnx.py <from_onnx.py>`"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:252
msgid ":download:`Download Jupyter notebook: from_onnx.ipynb <from_onnx.ipynb>`"
msgstr ""

#: ../../_staging/how_to/compile_models/from_onnx.rst:259
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

